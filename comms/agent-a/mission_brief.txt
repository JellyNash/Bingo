Mission: Produce PRD v1.0, Release Plan (Phases 1–3) and testable Acceptance Criteria for the Bingo platform specified in the master plan.
Scope constraints: MVP = single 75-ball game type, standard patterns (rows, columns, diagonals, four corners), single-room per game, offline/local mode supported, server-authoritative logic, smooth 60fps animations, resume after reload, basic penalty rules.
Non-functional targets: draw-to-UI < 200ms average (LAN), handle 1000+ concurrent players in a session, robust reconnect, rate-limited actions, signed game data, observability (OTel traces, Prom, Grafana), PWA for Player.
Deliverables:

PRD v1.0 covering personas, user journeys, rules, flows, NFRs, and edge cases.

Release Plan with Phases, milestones, and success metrics.

Acceptance Criteria (testable) for every user story.
Cross-checks: Align with Architect (Agent C) feasibility and Designer (Agent B) UX priorities.
Output format: Update docs/prd/PRD_v1.0.md, docs/release/release_plan.md, and docs/prd/acceptance_criteria_matrix.csv.
Signature: Include “Approved by Agent A — Product Owner” at the end when ready.

Content templates Agent A must use (a provides, c integrates)
1) PRD_v1.0.md template
# Bingo Platform — PRD v1.0

## 1. Overview
- Purpose
- Scope (MVP vs Future)
- Out of scope

## 2. Personas
- Player
- GameMaster (Host)
- Audience

## 3. User Stories (MVP)
- Join via PIN + nickname
- Mark/undo numbers (called-only)
- Claim Bingo
- GameMaster: create/open/start/pause/draw/undo (if included)/auto-draw
- Manage claims (accept/deny), view strikes, apply penalties
- Big-Screen: show draws, history, winners, media cues

## 4. Game Rules & Variants
- 75-ball, 5×5 (center free)
- Valid patterns (rows, columns, diagonals, four corners)
- Multi-winner setting (MVP default: 1 winner)
- Simultaneous claim handling

## 5. Penalties
- False-claim strikes and cooldowns (configurable; MVP defaults)

## 6. Functional Requirements
- Server-authoritative logic (card gen, draws, validation)
- Offline/local mode via mDNS (bingo.local)
- Resume after refresh/disconnect
- Player limits and late join behavior

## 7. Non-Functional Requirements
- Performance: draw→UI <200ms avg (LAN), smooth 60fps animations
- Scale: ≥1000 concurrent players/session
- Availability/recovery expectations
- Security: JWT, HMAC card signatures, rate limiting
- Observability: OTel traces, Prom metrics, Grafana dashboards
- PWA: installable player app, service worker caching

## 8. UX/Interaction Notes (for Agent B)
- Motion cues, feedback states, accessibility notes, audio cues

## 9. Edge Cases & Error States
- Rejoin after network loss
- Duplicate joins, invalid PIN, closed game
- Simultaneous claims; undo last draw (whether in MVP)
- Player penalties and disqualification flow

## 10. Analytics/Telemetry
- Key events and metrics required for ops/QA

## 11. Acceptance Criteria (pointer)
- See acceptance_criteria_matrix.csv

## 12. Release Plan (pointer)
- See /docs/release/release_plan.md

---
_Approved by Agent A — Product Owner (sign on completion)_

2) acceptance_criteria_matrix.csv template

(Agent A must fill)

User Story,ID,Given,When,Then,Perf Target,Notes
Player joins by PIN,US-PL-001,Given an active game PIN,When user submits PIN+nickname,Then server returns card+tokens or error,<200ms server p95,Errors: invalid/closed PIN
Player marks called number,US-PL-002,Given number X has been drawn,When player taps cell X,Then cell toggles marked and server (if logging) accepts,<16ms frame budget,Only called numbers allowed
Player claims Bingo (valid),US-PL-003,Given a completed winning pattern is marked,When player presses Claim,Then server approves claim, broadcasts result,<300ms end-to-end,Rank=1 if single-winner
Player claims Bingo (invalid),US-PL-004,Given pattern not complete,When player presses Claim,Then server denies and applies penalty cooldown,N/A,Cooldown visible in UI
GameMaster draws number,US-GM-001,Given game is RUNNING,When GM triggers draw,Then next number is persisted+broadcast,<200ms publish→receive avg,History updates on all UIs
Auto-draw interval,US-GM-002,Given auto-draw=enabled,When interval set to N sec,Then draws occur on schedule with pause/resume,±100ms jitter allowed,No overlap with media callouts
Big-Screen update,US-SC-001,Given new draw event,When event received,Then current number animates and history shifts,60fps animation,No jank under sustained play
Resume after reload,US-PL-005,Given stored resume token,When app reloads,Then user returns to same card and state,Reconnect ≤3s on LAN,Handles missed events via snapshot
Rate limit claims,US-SEC-001,Given spam attempts,When >5 claims/min,Then additional claims denied & strike policy applies,N/A,Log & metric emitted
Observability baseline,US-OPS-001,Given services running,When game flows occur,Then traces+metrics appear in Grafana/OTel,N/A,Dash IDs listed

3) release_plan.md template
# Release Plan

## Phase 1 — MVP (Weeks 1–5)
- Must-haves (list)
- Milestones & success metrics

## Phase 2 — Enhancements (Weeks 6–8+)
- Nice-to-haves (custom patterns, OBS overlay mode refinements, etc.)

## Phase 3 — Future
- Tournaments, multi-game types, cloud scale, etc.

## Risks & Mitigations
- (e.g., WiFi capacity at venue, Redis restarts, audio autoplay policies)

## Exit Criteria per Phase
- Quantified and testable

Review rubric & checks (b leads, a supports)

Structural completeness

PRD includes all 12 sections above.

Acceptance matrix covers every MVP user story with Given/When/Then and performance targets.

Release Plan defines milestones + success metrics.

Specificity

Concrete numbers for latency, scale, cooldowns, strike thresholds, auto-draw intervals.

Patterns explicitly listed; simultaneous claim rule stated.

Feasibility hooks

NFRs align with tech stack (Fastify, Socket.IO+Redis, Postgres/Prisma, PWA).

Offline mode + mDNS explicitly called out (bingo.local).

Testability

Each acceptance criterion is objectively testable by QA (no vague language).

Edge cases enumerated and linked to criteria.

Cross-team alignment gates

Architect feasibility note captured (pointer for Agent C to sign).

Designer motion/accessibility notes captured (pointer for Agent B to sign).

Definition of Done for Agent A (b signs, c integrates)

✅ docs/prd/PRD_v1.0.md present, filled, and signed by Agent A.

✅ docs/prd/acceptance_criteria_matrix.csv filled with all MVP stories.

✅ docs/release/release_plan.md filled with phases/milestones/metrics.

✅ Sign-offs captured inline at bottom of PRD:

“Feasibility reviewed — Agent C”

“UX alignment reviewed — Agent B”
(For now these are placeholders to be confirmed during Agents B and C; Agent A is still DoD once their docs are ready for those reviews.)

✅ Backlog created by c: one ticket per user story with links to criteria; label and component set.
