server:
  http_listen_port: 9080
  grpc_listen_port: 0

positions:
  filename: /tmp/positions.yaml

clients:
  - url: http://loki:3100/loki/api/v1/push

scrape_configs:
  # Docker container logs
  - job_name: docker
    docker_sd_configs:
      - host: unix:///var/run/docker.sock
        refresh_interval: 5s
    relabel_configs:
      # Keep only bingo containers
      - source_labels: [__meta_docker_container_label_com_docker_compose_project]
        regex: bingo
        action: keep
      # Extract container name
      - source_labels: [__meta_docker_container_name]
        regex: '/(.*)'
        target_label: container
      # Extract service name
      - source_labels: [__meta_docker_container_label_com_docker_compose_service]
        target_label: service
      # Add environment label
      - replacement: '${NODE_ENV:-production}'
        target_label: environment
    pipeline_stages:
      # Parse JSON logs if present
      - json:
          expressions:
            level: level
            timestamp: timestamp
            message: message
            trace_id: trace_id
      # Set log level
      - labels:
          level:
      # Parse timestamp
      - timestamp:
          source: timestamp
          format: RFC3339Nano
          fallback_formats:
            - RFC3339
            - UnixMs
      # Output the message
      - output:
          source: message

  # System logs (optional)
  - job_name: syslog
    static_configs:
      - targets:
          - localhost
        labels:
          job: syslog
          __path__: /var/log/syslog
    pipeline_stages:
      - regex:
          expression: '^(?P<timestamp>\w+\s+\d+\s+\d+:\d+:\d+)\s+(?P<hostname>\S+)\s+(?P<service>\S+?)(?:\[(?P<pid>\d+)\])?:\s+(?P<message>.*)$'
      - labels:
          hostname:
          service:
      - timestamp:
          source: timestamp
          format: 'Jan 2 15:04:05'
      - output:
          source: message